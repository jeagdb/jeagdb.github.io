{"pageProps":{"content":{"id":"backend-rails","path":"backend/rails.md","content":"<h1>Rails</h1>\n<h2>Gems</h2>\n<h3>Capistrano</h3>\n<h4>whenever</h4>\n<p>Fournit une syntaxe claire et simple pour écrire et déployer des cron jobs.\nLa commande <code>whenever</code> permet de lire/écrire dans le fichier <code>schedule.rb</code> et non directement dans le fichier crontab.</p>\n<p>Exemple:</p>\n<pre><code>every 1.day, at: '4:30 am' do\n  runner \"MyModel.task_to_run_at_four_thirty_in_the_morning\"\nend\n\nevery '0 0 27-31 * *' do\n  command \"echo 'you can use raw cron syntax too'\"\nend\n</code></pre>\n<h3>Scenic</h3>\n<p><a href=\"https://github.com/scenic-views/scenic\">Scenic</a> met à disposition des méthodes à <code>ActiveRecord::Migration</code> pour créer et gérer des views (voir la section dans postgresql).</p>\n<p>Scenic permet:</p>\n<ul>\n<li>utiliser des views sans avoir à changer le format du schema en SQL.</li>\n<li>convention pour versionner les views, tout en gardant l'historique de migration consistant et reversible.</li>\n</ul>\n<p>Utile pour mettre en place des <strong>materialized views</strong></p>\n","title":"Rails"}},"__N_SSG":true}